{"version":3,"sources":["components/Navbar.js","components/MainPage.js","components/Registration.js","components/Login.js","components/Profile.js","components/AdminPageDetail.js","components/AdminPage.js","components/EventsList.js","components/VolunteerPage.js","components/StudentListDetail.js","components/StudentList.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","isStaff","this","props","bg","expand","className","id","to","loggedIn","onClick","handleLogout","Component","MainPage","Registration","state","username","email","phone","password1","password2","handleSubmit","bind","handleInput","event","setState","target","name","value","preventDefault","handleRegistration","class","onSubmit","type","autoComplete","required","onChange","align","placeholder","Login","password","handleLogin","Profile","display_name","avatar","preview","handleImage","editProfile","fetch","then","response","ok","Error","json","data","catch","error","console","e","file","files","reader","FileReader","onloadend","result","readAsDataURL","a","formData","FormData","append","options","method","headers","Cookies","get","body","profile","JSON","stringify","src","alt","AdminPageDetail","isEditing","grade","events","date","saveEvent","editEvent","student","min","max","date_of_event","volunteer","deleteEvent","AdminPage","students","addEvent","assignStudent","Promise","all","responses","map","log","index","findIndex","splice","style","top","for","addevent","EventsList","signUp","rows","VolunteerPage","cancelEvent","StudentListDetail","firstName","lastName","studentId","primanryContact","saveStudent","first_name","last_name","student_id","primary_contact","primaryContact","editStudent","deleteStudent","deactivateStudent","StudentList","addStudent","studentID","active","App","parse","localStorage","getItem","is_staff","user","handleError","warn","set","key","setItem","history","push","err","remove","removeItem","Navbar","path","render","isAuthed","exact","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"ySAqDeA,E,4JA/Cb,WAAU,IAAD,OACDC,EAAUC,KAAKC,MAAMF,QAC3B,OACE,sBAAKG,GAAG,QAAQC,OAAO,KAAKC,UAAU,SAAtC,UACE,qBAAK,gBAAc,qBACnB,qBAAKC,GAAG,mBAAR,SACE,sBAAKD,UAAU,+CAAf,UACE,cAAC,IAAD,CAASE,GAAG,IAAIF,UAAU,gDAA1B,kBAEEJ,KAAKC,MAAMM,UAAYR,GACpB,qCACF,cAAC,IAAD,CAASO,GAAG,iBAAiBF,UAAU,gDAAvC,0BACA,cAAC,IAAD,CAASE,GAAG,YAAYF,UAAU,gDAAlC,6BAMDJ,KAAKC,MAAMM,WAAaR,GACvB,qCACE,cAAC,IAAD,CAASO,GAAG,qBAAqBF,UAAU,gDAA3C,8BACA,cAAC,IAAD,CAASE,GAAG,qBAAqBF,UAAU,gDAA3C,0BAMFJ,KAAKC,MAAMM,SAET,qCACE,cAAC,IAAD,CAASD,GAAG,WAAWF,UAAU,gDAAjC,qBACA,wBAAQA,UAAU,MAAMI,QAAS,kBAAM,EAAKP,MAAMQ,gBAAlD,uBAIF,qCACE,cAAC,IAAD,CAASH,GAAG,SAASF,UAAU,gDAA/B,mBACA,cAAC,IAAD,CAASE,GAAG,YAAYF,UAAU,gDAAlC,qC,GAvCMM,aCiBVC,E,kDAjBb,WAAYV,GAAQ,uCACZA,G,0CAIN,WAGE,OAEI,8D,GAZaS,a,OCqCRE,E,kDApCb,WAAYX,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CACXC,SAAU,GACVC,MAAO,GACPC,MAAO,GACPC,UAAW,GACXC,UAAW,IAEb,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBAVF,E,+CAYnB,SAAYE,GACVtB,KAAKuB,SAAL,eAAiBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,U,0BAGpD,SAAaJ,GACXA,EAAMK,iBACN3B,KAAKC,MAAM2B,mBAAmB5B,KAAKa,S,oBAGrC,WAAS,IAAD,OACN,OACE,qBAAKgB,MAAM,iBAAX,SACE,uBAAMA,MAAM,SAASC,SAAU9B,KAAKmB,aAApC,UACE,uBAAOU,MAAM,UAAUE,KAAK,OAAQN,KAAK,WAAWO,aAAa,MAAMC,UAAQ,EAACC,SAAUlC,KAAKqB,YAAaK,MAAO1B,KAAKa,MAAMC,SAAUqB,MAAM,SAASC,YAAY,aACnK,uBAAOP,MAAM,UAAUE,KAAK,QAAQN,KAAK,QAAQU,MAAM,SAASC,YAAY,SAASF,SAAUlC,KAAKqB,YAAaK,MAAO1B,KAAKa,MAAME,QACnI,uBAAOc,MAAM,UAAUE,KAAK,WAAWN,KAAK,YAAYU,MAAM,SAASH,aAAa,MAAMC,UAAQ,EAACC,SAAUlC,KAAKqB,YAAaK,MAAO1B,KAAKa,MAAMI,UAAWmB,YAAY,aACxK,uBAAOP,MAAM,UAAUE,KAAK,WAAWN,KAAK,YAAYU,MAAM,SAASH,aAAa,MAAMC,UAAQ,EAACC,SAAUlC,KAAKqB,YAAaK,MAAO1B,KAAKa,MAAMK,UAAWkB,YAAY,qBACxK,wBAAQP,MAAM,aAAaM,MAAM,SAAS3B,QAAS,kBAAM,EAAKP,MAAM2B,mBAAmB,EAAKf,QAA5F,+B,GA9BiBH,aCmCZ2B,E,kDAlCb,WAAYpC,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CACXC,SAAU,GACVC,MAAO,GACPuB,SAAU,IAGZ,EAAKnB,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBATF,E,+CAWnB,SAAYE,GACVtB,KAAKuB,SAAL,eAAiBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,U,0BAGpD,SAAaJ,GACXA,EAAMK,iBACN3B,KAAKC,MAAMsC,YAAYvC,KAAKa,S,oBAGhC,WAAS,IAAD,OACN,OACE,qBAAKgB,MAAM,iBAAX,SACE,uBAAMA,MAAM,SAASC,SAAU9B,KAAKmB,aAApC,UACE,uBAAOU,MAAM,WAAWE,KAAK,OAAQN,KAAK,WAAWO,aAAa,MAAMC,UAAQ,EAACC,SAAUlC,KAAKqB,YAAaK,MAAO1B,KAAKa,MAAMC,SAAUqB,MAAM,SAASC,YAAY,aACpK,uBAAOP,MAAM,WAAWE,KAAK,QAAQN,KAAK,QAAQU,MAAM,SAASC,YAAY,SAASF,SAAUlC,KAAKqB,YAAaK,MAAO1B,KAAKa,MAAME,QACpI,uBAAOc,MAAM,UAAUE,KAAK,WAAWN,KAAK,WAAWU,MAAM,SAASH,aAAa,MAAMC,UAAQ,EAACC,SAAUlC,KAAKqB,YAAaK,MAAO1B,KAAKa,MAAMI,UAAWmB,YAAY,aACvK,wBAAQP,MAAM,aAAaM,MAAM,SAAS3B,QAAS,kBAAM,EAAKP,MAAMsC,YAAY,EAAK1B,QAArF,6B,GA5BYH,aC2GL8B,E,kDAvGb,WAAYvC,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAQ,CACX4B,aAAc,GACdC,OAAQ,KACRC,QAAS,IAEX,EAAKtB,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKwB,YAAc,EAAKA,YAAYxB,KAAjB,gBACnB,EAAKD,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKyB,YAAc,EAAKA,YAAYzB,KAAjB,gBAVF,E,qDAanB,WAAoB,IAAD,OACjB0B,MAAM,gCACLC,MAAK,SAAAC,GACJ,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAM,+BAElB,OAAOF,EAASG,UAEjBJ,MAAK,SAAAK,GAAI,OAAI,EAAK7B,SAAL,eAAmB6B,OAChCC,OAAM,SAAAC,GACLC,QAAQD,MAAM,uDAAwDA,Q,yBAK1E,SAAYE,GACVxD,KAAKuB,SAAL,eAAiBiC,EAAEhC,OAAOC,KAAO+B,EAAEhC,OAAOE,U,yBAG5C,SAAY8B,GAAI,IAAD,OACTC,EAAOD,EAAEhC,OAAOkC,MAAM,GACxB1D,KAAKuB,SAAL,eACEiC,EAAEhC,OAAOC,KAAOgC,IAEpB,IAAIE,EAAS,IAAIC,WACjBD,EAAOE,UAAY,WACjB,EAAKtC,SAAS,CACZoB,QAASgB,EAAOG,UAGpBH,EAAOI,cAAcN,K,iEAGvB,WAAmBD,GAAnB,mBAAAQ,EAAA,6DACER,EAAE7B,kBACEsC,EAAU,IAAIC,UACTC,OAAO,SAAUnE,KAAKa,MAAM6B,QACrCuB,EAASE,OAAO,eAAgBnE,KAAKa,MAAM4B,cACrC2B,EAAU,CACZC,OAAQ,OACRC,QAAS,CACP,cAAeC,IAAQC,IAAI,cAE7BC,KAAMR,GAVZ,SAY2BnB,MAAM,+BAAgCsB,GAZjE,OAYUpB,EAZV,OAaIhD,KAAKuB,SAAS,CAAEyB,aAbpB,gD,gFAiBA,SAAY0B,GACV,IAAMN,EAAS,CACbC,OAAQ,QACRC,QAAS,CACT,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,cAE3BC,KAAME,KAAKC,UAAUF,IAEvB5B,MAAM,8BAA+BsB,GAClCrB,MAAK,SAAAC,GACJ,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAM,SAElB,OAAOF,EAASG,Y,oBAItB,WACA,OACE,mCAEI,uBAAMrB,SAAU9B,KAAKmB,aAArB,UACI,0BAASf,UAAU,UAAnB,UACE,uBAAO2B,KAAK,OAAON,KAAK,eAAeC,MAAO1B,KAAKa,MAAM4B,aAAcP,SAAUlC,KAAKqB,cACtF,uBAAOU,KAAK,OAAON,KAAK,SAASS,SAAUlC,KAAK4C,cAC/C5C,KAAKa,MAAM6B,OACR,qBAAKmC,IAAK7E,KAAKa,MAAM8B,SAAW3C,KAAKa,MAAM6B,OAAQoC,IAAI,KACvD,QAGN,wBAAQ/C,KAAK,SAAb,oC,GAhGUrB,a,gBCoFPqE,E,kDAnFb,WAAY9E,GAAQ,IAAD,kCACjB,cAAMA,IAEDY,MAAQ,CACXmE,WAAW,EACXC,MAAK,UAAE,EAAKhF,MAAMiF,cAAb,aAAE,EAAmBD,MAC1BE,KAAI,UAAE,EAAKlF,MAAMiF,cAAb,aAAE,EAAmBC,MAI3B,EAAK9D,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKgE,UAAY,EAAKA,UAAUhE,KAAf,gBAXA,E,+CAenB,SAAYE,GACVtB,KAAKuB,SAAL,eAAiBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,U,uBAGpD,WACE,IAAMJ,EAAQtB,KAAKC,MAAMqB,MACzBA,EAAM2D,MAAQjF,KAAKa,MAAMoE,MACzB3D,EAAM6D,KAAOnF,KAAKa,MAAMsE,KAExBnF,KAAKC,MAAMoF,UAAU/D,GACrBtB,KAAKuB,SAAS,CAAEyD,WAAW,M,oBAe7B,WAAU,IAAD,OAEDE,GADWlF,KAAKC,MAAMqF,QACbtF,KAAKC,MAAMqB,OAC1B,OACE,oBAAIlB,UAAU,gCAAd,SACE,gCAEIJ,KAAKa,MAAMmE,UAEL,qCACE,uBAAOjD,KAAK,SAASwD,IAAI,IAAIC,IAAI,IAAI/D,KAAK,QAAQC,MAAO1B,KAAKa,MAAMoE,MAAO/C,SAAUlC,KAAKqB,cAC1F,uBAAOU,KAAK,iBAAiBL,MAAO1B,KAAKa,MAAMsE,KAAMjD,SAAUlC,KAAKqB,YAAaI,KAAK,YAIxF,qCACA,sBAAKrB,UAAU,oBAAf,UACE,uBAAOA,UAAU,mCAAjB,oBACA,oBAAIA,UAAU,kCAAd,SAAiD8E,EAAOD,WAEtD,uBAAO7E,UAAU,8BAAjB,mBACF,+BAAO8E,EAAOO,gBACZ,uBAAOrF,UAAU,8BAAjB,wBACF,4BAAI8E,EAAOQ,eAKnB,wBAAQ7D,MAAM,mBAAmBrB,QAAS,kBAAM,EAAKP,MAAM0F,YAAYT,EAAO7E,KAA9E,oBAIAL,KAAKa,MAAMmE,UACP,wBAAQnD,MAAM,uCAAuCE,KAAK,SAASvB,QAASR,KAAKoF,UAAjF,kBACA,wBAAQvD,MAAM,sCAAsCrB,QAAS,kBAAM,EAAKe,SAAS,CAACyD,WAAW,KAA7F,2B,GA5EctE,aCuMXkF,E,kDAnMjB,WAAY3F,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAM,CACTqE,OAAQ,GACRW,SAAU,GACVZ,MAAO,KACPE,KAAM,MAER,EAAKW,SAAW,EAAKA,SAAS1E,KAAd,gBAChB,EAAKiE,UAAY,EAAKA,UAAUjE,KAAf,gBACjB,EAAKuE,YAAc,EAAKA,YAAYvE,KAAjB,gBACnB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAK2E,cAAgB,EAAKA,cAAc3E,KAAnB,gBAZJ,E,qDAoBjB,WAAoB,IAAD,OACjB4E,QAAQC,IAAI,CAACnD,MAAM,mBAAoBA,MAAM,uBAC5CC,MAAK,SAAAmD,GACJ,OAAOF,QAAQC,IAAIC,EAAUC,KAAI,SAAUnD,GAC3C,OAAOA,EAASG,cAGjBJ,MAAK,SAAAK,GACJ,kBAA2BA,EAA3B,GAAO8B,EAAP,KAAeW,EAAf,KACA,EAAKtE,SAAS,CAAC2D,SAAQW,kB,yBAqB7B,SAAYvE,GACVtB,KAAKuB,SAAL,eAAiBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,U,sBAGpD,SAAS8B,GAAI,IAAD,OACVA,EAAE7B,iBACF,IAAML,EAAQ,CACZ2D,MAAOjF,KAAKa,MAAMoE,MAClBQ,cAAezF,KAAKa,MAAMsE,MAI5B5B,QAAQ6C,IAAI9E,GACZ,IAAM8C,EAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,cAE7BC,KAAME,KAAKC,UAAUtD,IAEvBwB,MAAM,kBAAmBsB,GACtBrB,MAAK,SAAAC,GAAQ,OAAIA,EAASG,UAC1BJ,MAAK,SAAAK,GACJ,IAAM8B,EAAM,sBAAO,EAAKrE,MAAMqE,QAAlB,CAA0B9B,IAEtC,EAAK7B,SAAS,CAAC2D,SAAQD,MAAO,GAAIE,KAAM,U,uBAI5C,SAAU7D,GAAQ,IAAD,OAET8C,EAAU,CACdC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,cAE7BC,KAAME,KAAKC,UAAUtD,IAEvBwB,MAAM,kBAAD,OAAmBxB,EAAMjB,GAAzB,KAAgC+D,GAClCrB,MAAK,SAAAC,GACJ,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAM,+BAElB,IAAMgC,EAAM,YAAO,EAAKrE,MAAMqE,QAC9B3B,QAAQ6C,IAAIlB,GACZ,IAAMmB,EAAQnB,EAAOoB,WAAU,SAAAhF,GAAK,OAAIA,EAAMjB,KAAOiB,EAAMjB,MAC3D6E,EAAOmB,GAAOpB,MAAQ3D,EAAM2D,MAC5BC,EAAOmB,GAAOlB,KAAO7D,EAAM6D,KAC3B,EAAK5D,SAAS,CAAE2D,gB,yBAKpB,SAAY7E,GAAK,IAAD,OACR+D,EAAS,CACbC,OAAQ,SACRC,QAAS,CACT,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,eAG7B1B,MAAM,kBAAD,OAAmBzC,EAAnB,KAA0B+D,GAC5BrB,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,+BAElB,IAAMgC,EAAM,YAAO,EAAKrE,MAAMqE,QACxBmB,EAAQnB,EAAOoB,WAAU,SAAAhF,GAAK,OAAI4D,EAAO7E,KAAOA,KACtD6E,EAAOqB,OAAOF,EAAO,GACrB,EAAK9E,SAAS,CAAE2D,cAEjB7B,OAAM,SAACC,GACNC,QAAQD,MAAM,SAAUA,Q,2BAI9B,SAAchC,EAAOgE,GAAU,IAAD,OAE5BhE,EAAMK,iBAEN,IAAMtB,EAAKiF,EAAQjF,GAEb+D,EAAU,CACdC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,cAE7BC,KAAME,KAAKC,UAAUU,IAEvBxC,MAAM,oBAAD,OAAqBzC,EAArB,KAA4B+D,GAC9BrB,MAAK,SAAAC,GACJ,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAM,+BAElB,IAAM2C,EAAQ,YAAO,EAAKhF,MAAMgF,UAChCtC,QAAQ6C,IAAIP,GACZ,IAAMQ,EAAQR,EAASS,WAAU,SAAAhF,GAAK,OAAIgE,EAAQjF,KAAOA,KACzDiF,EAAQe,GAAO/E,MAAQ,KACvB,EAAKC,SAAS,CAAEsE,kB,oBAKxB,WAAU,IAAD,SACDX,EAASlF,KAAKa,MAAMqE,OAAOiB,KAAI,SAAA7E,GAAK,OACxC,cAAC,EAAD,CAAgCA,MAAOA,EAAOqE,YAAa,EAAKA,YAAaN,UAAW,EAAKA,WAAvE/D,EAAMjB,OAGbL,KAAKa,MAAMgF,SAASM,KAAI,SAAAb,GAAO,OAC9C,cAAC,EAAD,CAAiBlF,UAAU,WAA4B2F,cAAe,EAAKA,cAAeT,QAASA,GAAxDA,EAAQjF,OAKrD,OACE,mCAEE,0BAASD,UAAU,wBAAnB,UACM,6BAAK8E,IAGL,yBAAS9E,UAAU,8BAA8BoG,MAAO,CAACC,IAAI,QAA7D,SACI,uBAAM5E,MAAM,SAASC,SAAU9B,KAAK8F,SAApC,UACE,sBAAKjE,MAAM,OAAX,UACE,uBAAO6E,IAAI,2BAA2B7E,MAAM,mBAA5C,mBACA,uBAAOE,KAAK,SAASwD,IAAI,IAAIC,IAAI,IAAI3D,MAAM,UAAUxB,GAAG,2BAA2B2B,aAAa,MAAMP,KAAK,QAAQC,MAAO1B,KAAKa,MAAMoE,MAAO/C,SAAUlC,KAAKqB,YAAae,YAAY,wBAEtL,sBAAKP,MAAM,OAAX,UACE,uBAAO6E,IAAI,8BAA8B7E,MAAM,mBAA/C,wBACA,0BAAOE,KAAK,iBAAkBF,MAAM,UAAUJ,KAAK,OAAOpB,GAAG,WAAW2B,aAAa,OAArF,mBAA8F,4BAA9F,sBAAiIhC,KAAKa,MAAM4E,eAA5I,yBAAqKzF,KAAKqB,aAA1K,qBAA4L,KAA5L,OAEN,wBAAQU,KAAK,SAASvB,QAASR,KAAK2G,SAAU9E,MAAM,qBAApD,kC,GAzLMnB,aC2FTkG,E,kDA1Fb,WAAY3G,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAM,CACTqE,OAAQ,GACRD,MAAO,KACPE,KAAM,MAER,EAAK9D,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKyF,OAAS,EAAKA,OAAOzF,KAAZ,gBARG,E,qDAYjB,WAAoB,IAAD,OACjB0B,MAAM,mBACLC,MAAK,SAAAC,GACJ,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAM,+BAElB,OAAOF,EAASG,UAEjBJ,MAAK,SAAAK,GAAI,OAAI,EAAK7B,SAAS,CAAE2D,OAAQ9B,OACrCC,OAAM,SAAAC,GACLC,QAAQD,MAAM,uDAAwDA,Q,yBAIxE,SAAYhC,GACVtB,KAAKuB,SAAL,eAAiBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,U,oBAGtD,SAAO8B,EAAGlC,GAAQ,IAAD,OACfkC,EAAE7B,iBAEF,IAAMtB,EAAKiB,EAAMjB,GAEX+D,EAAU,CACdC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,cAE7BC,KAAME,KAAKC,UAAUtD,IAEvBwB,MAAM,kBAAD,OAAmBzC,EAAnB,KAA0B+D,GAC5BrB,MAAK,SAAAC,GACJ,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAM,+BAElB,IAAMgC,EAAM,YAAO,EAAKrE,MAAMqE,QAExBmB,EAAQnB,EAAOoB,WAAU,SAAAhF,GAAK,OAAIA,EAAMjB,KAAOA,KACrD6E,EAAOmB,GAAOX,WAAY,EAC1B,EAAKnE,SAAS,CAAE2D,gB,oBAKpB,WAAU,IAAD,OACDA,EAASlF,KAAKa,MAAMqE,OAAOiB,KAAI,SAAC7E,EAAO+E,GAAR,OACnC,8BAEE,kCACI,sBAAMvE,SAAU,SAAC0B,GAAD,OAAO,EAAKqD,OAAOrD,EAAGlC,IAAQlB,UAAU,OAAxD,SACE,sBAAKyB,MAAM,OAAX,UACE,uBAAO6E,IAAI,2BAA2B7E,MAAM,aAA5C,mBACA,oBAAGA,MAAM,eAAexB,GAAG,2BAA2BoB,KAAK,QAA3D,UAAoEH,EAAM2D,MAA1E,OAGA,uBAAOyB,IAAI,8BAA8B7E,MAAM,aAA/C,wBACA,sBAAMA,MAAM,eAAexB,GAAG,2BAA2ByG,KAAK,IAA9D,SAAmExF,EAAMmE,gBAE3E,wBAAQpF,GAAG,SAASwB,MAAM,yBAAwBE,KAAM,SAASvB,QAAS,SAACgD,GAAD,OAAO,EAAKqD,OAAOrD,EAAGlC,IAAhG,6BAZI+E,MAsBhB,OAEI,6BAAKnB,Q,GArFUxE,aCyGVqG,E,kDAvGb,WAAY9G,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAM,CACTqE,OAAQ,IAGZ,EAAK8B,YAAc,EAAKA,YAAY5F,KAAjB,gBANA,E,qDAUjB,WAAoB,IAAD,OACjB0B,MAAM,6BACLC,MAAK,SAAAC,GACJ,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAM,+BAElB,OAAOF,EAASG,UAEjBJ,MAAK,SAAAK,GAAI,OAAI,EAAK7B,SAAS,CAAE2D,OAAQ9B,OACrCC,OAAM,SAAAC,GACLC,QAAQD,MAAM,uDAAwDA,Q,yBAKxE,SAAYhC,GACVtB,KAAKuB,SAAL,eAAiBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,U,yBAIpD,SAAY8B,EAAGlC,GAAQ,IAAD,OAClBkC,EAAE7B,iBAEF,IAAMtB,EAAKiB,EAAMjB,GAEX+D,EAAU,CACdC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,cAE7BC,KAAME,KAAKC,UAAUtD,IAEvBwB,MAAM,4BAAD,OAA6BzC,EAA7B,KAAoC+D,GACtCrB,MAAK,SAAAC,GACJ,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAM,+BAElB,IAAMgC,EAAM,YAAO,EAAKrE,MAAMqE,QAEhBA,EAAOoB,WAAU,SAAAhF,GAAK,OAAIA,EAAMjB,KAAOA,KAErD,EAAKkB,SAAS,CAAE2D,gB,oBA8B1B,WAAU,IAAD,OACDA,EAASlF,KAAKa,MAAMqE,OAAOiB,KAAI,SAAC7E,EAAO+E,GAAR,OACnC,gCACI,6BAAK/E,EAAM2D,QACX,+BAAO3D,EAAMmE,gBACb,wBAAQjF,QAAS,SAACgD,GAAD,OAAO,EAAKwD,YAAYxD,EAAElC,IAA3C,sBAHQ+E,MAUd,OAEI,6BAAKnB,Q,GAlGaxE,aCoFbuG,E,kDApFb,WAAYhH,GAAQ,IAAD,8BACjB,cAAMA,IAEDY,MAAQ,CACXmE,WAAW,EACXkC,UAAW,EAAKjH,MAAMiH,UACtBC,SAAU,EAAKlH,MAAMkH,SACrBC,UAAW,EAAKnH,MAAMmH,UACtBC,gBAAiB,EAAKpH,MAAMoH,gBAC5BpC,MAAO,EAAKhF,MAAMgF,OAGpB,EAAK5D,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKkG,YAAc,EAAKA,YAAYlG,KAAjB,gBAbF,E,+CAiBnB,SAAYE,GACVtB,KAAKuB,SAAL,eAAiBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,U,yBAGpD,WACE,IAAM4D,EAAUtF,KAAKC,MAAMqF,QAC3BA,EAAQiC,WAAavH,KAAKa,MAAMqG,UAChC5B,EAAQkC,UAAYxH,KAAKa,MAAMsG,SAC/B7B,EAAQmC,WAAazH,KAAKa,MAAMuG,UAChC9B,EAAQoC,gBAAkB1H,KAAKa,MAAM8G,eACrCrC,EAAQL,MAAQjF,KAAKa,MAAMoE,MAG3BjF,KAAKC,MAAM2H,YAAYtC,GACvBtF,KAAKuB,SAAS,CAAEyD,WAAW,M,oBAM7B,WAAU,IAAD,OACDa,EAAW7F,KAAKC,MAAMqF,QAC5B,OACE,6BACE,gCAEItF,KAAKa,MAAMmE,UAEL,qCACE,uBAAOjD,KAAK,OAAON,KAAK,YAAYI,MAAM,eAAeG,aAAa,MAAM3B,GAAG,2BAA4BqB,MAAO1B,KAAKa,MAAM0G,WAAYrF,SAAUlC,KAAKqB,YAAayF,KAAK,IAAG1E,YAAY,kCACzL,uBAAOL,KAAK,OAAON,KAAK,WAAWI,MAAM,eAAeG,aAAa,MAAM3B,GAAG,2BAA4BqB,MAAO1B,KAAKa,MAAM2G,UAAWtF,SAAUlC,KAAKqB,YAAayF,KAAK,IAAG1E,YAAY,iCACvL,uBAAOL,KAAK,SAASF,MAAM,eAAexB,GAAG,2BAA2B2B,aAAa,MAAMP,KAAK,YAAYC,MAAO1B,KAAKa,MAAM4G,WAAYvF,SAAUlC,KAAKqB,YAAae,YAAY,0BAClL,uBAAOL,KAAK,OAAON,KAAK,iBAAiBI,MAAM,eAAeG,aAAa,MAAM3B,GAAG,2BAA4BqB,MAAO1B,KAAKa,MAAM6G,gBAAiBxF,SAAUlC,KAAKqB,YAAayF,KAAK,IAAI1E,YAAY,uCACpM,uBAAOL,KAAK,SAASwD,IAAI,IAAIC,IAAI,IAAI/D,KAAK,QAAQC,MAAO1B,KAAKa,MAAMoE,MAAO/C,SAAUlC,KAAKqB,YAAae,YAAY,gCAIrH,qCAEE,4BAAIyD,EAAS0B,aACb,4BAAI1B,EAAS2B,YACb,4BAAI3B,EAAS4B,aACb,4BAAI5B,EAAS6B,kBACb,6BAAK7B,EAASZ,WAMtB,qCACE,wBAAQzE,QAAS,kBAAM,EAAKP,MAAM4H,cAAchC,EAASxF,KAAzD,oBACA,wBAAQG,QAAS,kBAAM,EAAKP,MAAM6H,kBAAkBjC,EAASxF,KAA7D,6BAKFL,KAAKa,MAAMmE,UACP,wBAAQjD,KAAK,SAASvB,QAASR,KAAKsH,YAApC,kBACA,wBAAQ9G,QAAS,kBAAM,EAAKe,SAAS,CAACyD,WAAW,KAAjD,2B,GA7EgBtE,aC4NbqH,E,kDAxNjB,WAAY9H,GAAQ,IAAD,8BACjB,cAAMA,IACDY,MAAO,CACVgF,SAAU,GACVqB,UAAW,GACXC,SAAU,GACVC,UAAW,KACXO,eAAgB,GAChB1C,MAAO,MAET,EAAK+C,WAAa,EAAKA,WAAW5G,KAAhB,gBAClB,EAAKwG,YAAc,EAAKA,YAAYxG,KAAjB,gBACnB,EAAKyG,cAAgB,EAAKA,cAAczG,KAAnB,gBACrB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAK0G,kBAAoB,EAAKA,kBAAkB1G,KAAvB,gBAdR,E,qDAqBjB,WAAoB,IAAD,OACjB0B,MAAM,qBACLC,MAAK,SAAAC,GACJ,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAM,+BAElB,OAAOF,EAASG,UAEjBJ,MAAK,SAAAK,GAAI,OAAI,EAAK7B,SAAS,CAAEsE,SAAUzC,OACvCC,OAAM,SAAAC,GACLC,QAAQD,MAAM,uDAAwDA,Q,yBAK5E,SAAYhC,GACVtB,KAAKuB,SAAL,eAAiBD,EAAME,OAAOC,KAAOH,EAAME,OAAOE,U,wBAGpD,SAAW8B,GAAI,IAAD,OACZA,EAAE7B,iBACF,IAAM2D,EAAU,CACdiC,WAAYvH,KAAKa,MAAMqG,UACvBM,UAAWxH,KAAKa,MAAMsG,SACtBM,WAAYzH,KAAKa,MAAMuG,UACvBM,gBAAiB1H,KAAKa,MAAM8G,eAC5B1C,MAAOjF,KAAKa,MAAMoE,OAGpB1B,QAAQ6C,IAAId,GACZ,IAAMlB,EAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,cAE7BC,KAAME,KAAKC,UAAUU,IAEvBxC,MAAM,oBAAqBsB,GACxBrB,MAAK,SAAAC,GAAQ,OAAIA,EAASG,UAC1BJ,MAAK,SAAAK,GACJ,IAAMyC,EAAQ,sBAAO,EAAKhF,MAAMgF,UAAlB,CAA4BzC,IAE1C,EAAK7B,SAAS,CAACsE,WAAUqB,UAAW,GAAIC,SAAU,GAAIC,UAAW,KAAMO,eAAgB,GAAI1C,MAAO,U,yBAItG,SAAYK,GAAU,IAAD,OAEblB,EAAU,CACdC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,cAE7BC,KAAME,KAAKC,UAAUU,IAEvBxC,MAAM,oBAAD,OAAqBwC,EAAQjF,GAA7B,KAAoC+D,GACtCrB,MAAK,SAAAC,GACJ,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAM,+BAElB,IAAM2C,EAAQ,YAAO,EAAKhF,MAAMgF,UAE1BQ,EAAQR,EAASS,WAAU,SAAAhB,GAAO,OAAIA,EAAQjF,KAAOiF,EAAQjF,MACnEwF,EAASQ,GAAOa,UAAY5B,EAAQ4B,UACpCrB,EAASQ,GAAOc,SAAW7B,EAAQ6B,SACnCtB,EAASQ,GAAO4B,UAAY3C,EAAQ2C,UACpCpC,EAASQ,GAAOsB,eAAiBrC,EAAQqC,eACzC9B,EAASQ,GAAOpB,MAAQK,EAAQL,MAEhC,EAAK1D,SAAS,CAAEsE,kB,+BAKtB,SAAkBP,GAAU,IAAD,OACnBjF,EAAKiF,EAAQjF,GAIb+D,EAAU,CACdC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,cAE7BC,KAAME,KAAKC,UATE,CACbsD,QAAQ,KAUVpF,MAAM,oBAAD,OAAqBzC,EAArB,KAA4B+D,GAC9BrB,MAAK,SAAAC,GACJ,IAAIA,EAASC,GACX,MAAM,IAAIC,MAAM,+BAElB,OAAOF,EAASG,UAIjBJ,MAAK,SAAAK,GACF,IAAMyC,EAAQ,YAAO,EAAKhF,MAAMgF,UAE1BQ,EAAQR,EAASS,WAAU,SAAAhB,GAAO,OAAIA,EAAQjF,KAAOA,KAC3DwF,EAASQ,GAAO6B,QAAS,EACzB,EAAK3G,SAAS,CAAEsE,kB,2BAKtB,SAAcxF,GAAK,IAAD,OACV+D,EAAS,CACbC,OAAQ,SACRC,QAAS,CACT,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,eAG7B1B,MAAM,oBAAD,OAAqBzC,EAArB,KAA4B+D,GAC9BrB,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAM,+BAElB,IAAM2C,EAAQ,YAAO,EAAKhF,MAAMgF,UAC1BQ,EAAQR,EAASS,WAAU,SAAAhF,GAAK,OAAIuE,EAASxF,KAAOA,KAC1DwF,EAASU,OAAOF,EAAO,GACvB,EAAK9E,SAAS,CAAEsE,gBAEjBxC,OAAM,SAACC,GACNC,QAAQD,MAAM,SAAUA,Q,oBAIhC,WAAU,IAAD,OACDuC,EAAW7F,KAAKa,MAAMgF,SAASM,KAAI,SAAAb,GAAO,OAC9C,cAAC,EAAD,CAAoCA,QAASA,EAASwC,kBAAmB,EAAKA,kBAAmBD,cAAe,EAAKA,cAAeD,YAAa,EAAKA,aAA9HtC,EAAQjF,OAgBlC,OACE,mCACE,0BAASD,UAAU,wBAAnB,UAEI,6BAAKyF,IAEH,yBAASzF,UAAU,gCAAgCoG,MAAO,CAACC,IAAI,QAA/D,SACI,uBAAM5E,MAAM,SAASC,SAAU9B,KAAKgI,WAApC,UACA,sBAAKnG,MAAM,OAAX,UACE,uBAAO6E,IAAI,8BAA8B7E,MAAM,aAA/C,wBACA,uBAAOE,KAAK,OAAON,KAAK,YAAYQ,UAAQ,EAACJ,MAAM,uBAAuBG,aAAa,MAAM3B,GAAG,2BAA4BqB,MAAO1B,KAAKa,MAAM0G,WAAYrF,SAAUlC,KAAKqB,YAAayF,KAAK,SAG7L,sBAAKjF,MAAM,OAAX,UACE,uBAAO6E,IAAI,8BAA8B7E,MAAM,aAA/C,uBACA,uBAAOE,KAAK,OAAON,KAAK,WAAWQ,UAAQ,EAACJ,MAAM,uBAAuBG,aAAa,MAAM3B,GAAG,2BAA4BqB,MAAO1B,KAAKa,MAAM2G,UAAWtF,SAAUlC,KAAKqB,YAAayF,KAAK,SAG3L,sBAAKjF,MAAM,OAAX,UACE,uBAAO6E,IAAI,2BAA2B7E,MAAM,aAA5C,wBACA,uBAAOE,KAAK,SAASF,MAAM,uBAAuBI,UAAQ,EAAC5B,GAAG,2BAA2B2B,aAAa,MAAMP,KAAK,YAAYC,MAAO1B,KAAKa,MAAM4G,WAAYvF,SAAUlC,KAAKqB,YAAae,YAAY,6BAIrM,sBAAKP,MAAM,OAAX,UACE,uBAAO6E,IAAI,8BAA8B7E,MAAM,cAA/C,6BACA,uBAAOE,KAAK,OAAON,KAAK,iBAAiBQ,UAAQ,EAACJ,MAAM,uBAAuBG,aAAa,MAAM3B,GAAG,2BAA4BqB,MAAO1B,KAAKa,MAAM6G,gBAAiBxF,SAAUlC,KAAKqB,YAAayF,KAAK,SAIrM,sBAAKjF,MAAM,OAAX,UACE,uBAAO6E,IAAI,2BAA2B7E,MAAM,aAA5C,mBACA,uBAAOE,KAAK,SAASwD,IAAI,IAAIC,IAAI,IAAIvD,UAAQ,EAACJ,MAAM,uBAAuBxB,GAAG,2BAA2B2B,aAAa,MAAMP,KAAK,QAAQC,MAAO1B,KAAKa,MAAMoE,MAAO/C,SAAUlC,KAAKqB,YAAae,YAAY,wBAGhN,wBAAQL,KAAK,SAASvB,QAASR,KAAKgI,WAAYnG,MAAM,qBAAtD,kC,GA9MQnB,aCapByH,G,wDACJ,WAAYlI,GAAQ,IAAD,gCACjB,cAAMA,IACDY,MAAM,CACTN,WAAYgE,IAAQC,IAAI,iBACxBzE,WAAU,UAAC4E,KAAKyD,MAAMC,aAAaC,QAAQ,gBAAjC,aAAC,EAA0CC,WAGvD,EAAKhG,YAAc,EAAKA,YAAYnB,KAAjB,gBACnB,EAAKQ,mBAAqB,EAAKA,mBAAmBR,KAAxB,gBAE1B,EAAKX,aAAe,EAAKA,aAAaW,KAAlB,gBAVH,E,sFAenB,WAAkBoH,GAAlB,qBAAAxE,EAAA,6DAGQI,EAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,cAE7BC,KAAME,KAAKC,UAAU4D,IAEjBC,EAAc,SAACnF,GAAD,OAAWC,QAAQmF,KAAKpF,IAX9C,SAYyBR,MAAM,oBAAqBsB,GAASf,MAAMoF,GAZnE,YAYQzF,EAZR,QAccC,GAdd,iCAeuBD,EAASG,OAAOE,MAAMoF,GAf7C,OAeUrF,EAfV,OAiBImB,IAAQoE,IAAI,gBAAZ,gBAAsCvF,EAAKwF,MAE3CP,aAAaQ,QAAQ,OAAQlE,KAAKC,UAAUxB,EAAKoF,OAGjDxI,KAAKuB,SAAS,CAACxB,QAASqD,EAAKoF,KAAKD,SAAUhI,UAAU,IAEnD6C,EAAKoF,KAAKD,SACXvI,KAAKC,MAAM6I,QAAQC,KAAK,kBAExB/I,KAAKC,MAAM6I,QAAQC,KAAK,sBA3B9B,iD,8HAgCA,WAAyBP,GAAzB,qBAAAxE,EAAA,6DACQI,EAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,cAE7BC,KAAME,KAAKC,UAAU4D,IAEjBC,EAAc,SAACnF,GAAD,OAAWC,QAAQmF,KAAKpF,IAT9C,SAUyBR,MAAM,2BAA4BsB,GAASf,MAAMoF,GAV1E,YAUQzF,EAVR,QAWeC,GAXf,iCAYuBD,EAASG,OAAOE,MAAMoF,GAZ7C,OAYUrF,EAZV,OAcImB,IAAQoE,IAAI,gBAAZ,gBAAsCvF,EAAKwF,MAC3CP,aAAaQ,QAAQ,OAAQlE,KAAKC,UAAUxB,EAAKoF,OAEjDxI,KAAKuB,SAAS,CAAChB,UAAU,IACzBP,KAAKC,MAAM6I,QAAQC,KAAK,sBAlB5B,iD,wHAsBA,WAAmBP,GAAnB,iBAAAxE,EAAA,6DACMI,EAAU,CACdC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,cAAeC,IAAQC,IAAI,eAGvBiE,EAAc,SAACO,GAAD,OAASzF,QAAQmF,KAAKM,IAR5C,SASyBlG,MAAM,qBAAsBsB,GAASf,MAAMoF,GATpE,cAWcxF,KACVsB,IAAQ0E,OAAO,iBACfjJ,KAAKC,MAAM6I,QAAQC,KAAK,KACxB/I,KAAKuB,SAAS,CAAChB,UAAU,IACzB8H,aAAaa,WAAW,SAf5B,gD,2EAmCA,WAAU,IAAD,OAET,OACE,mCACA,uBAAM9I,UAAU,2BAAhB,UACE,cAAC+I,EAAD,CAAQ5I,SAAUP,KAAKa,MAAMN,SAAUE,aAAcT,KAAKS,aAAcV,QAASC,KAAKa,MAAMd,UAE5F,eAAC,IAAD,WACI,cAAC,IAAD,CACEqJ,KAAK,SACLC,OAAQ,SAACpJ,GAAD,OACN,cAAC,EAAD,2BAAWA,GAAX,IAAkBsC,YAAa,EAAKA,YAAa+G,UAAU,QAI/D,cAAC,IAAD,CACEF,KAAK,YACLC,OAAQ,SAACpJ,GAAD,OACN,cAAC,EAAD,2BAAkBA,GAAlB,IAAyB2B,mBAAoB,EAAKA,yBAItD,cAAC,IAAD,CACEwH,KAAK,qBACLC,OAAQ,SAACpJ,GAAD,OACN,cAAC,EAAD,eAAgBA,OAIpB,cAAC,IAAD,CACEmJ,KAAK,iBACLC,OAAQ,SAACpJ,GAAD,OACN,cAAC,EAAD,2BAAeA,GAAf,IAAsBqJ,UAAU,QAIpC,cAAC,IAAD,CACEF,KAAK,qBACLC,OAAQ,SAACpJ,GAAD,OACN,cAAC,EAAD,2BAAmBA,GAAnB,IAA0BqJ,UAAU,QAIxC,cAAC,IAAD,CACEF,KAAK,WACLC,OAAQ,SAACpJ,GAAD,OACN,cAAC,EAAD,2BAAaA,GAAb,IAAoBqJ,UAAU,QAKlC,cAAC,IAAD,CACEF,KAAK,YACLC,OAAQ,SAACpJ,GAAD,OACN,cAAC,EAAD,2BAAiBA,GAAjB,IAAwBqJ,UAAU,QAQxC,cAAC,IAAD,CAAOC,OAAK,EAACH,KAAK,IAAlB,SACG,cAAC,EAAD,kB,GAxKO1I,cAoLH8I,cAAWrB,GC3LXsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5G,MAAK,YAAkD,IAA/C6G,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASZ,OACP,cAAC,IAAMa,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.4017a966.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\n\n\nclass Navigation extends Component {\n\n  render() {\n    const isStaff = this.props.isStaff;\n    return(\n      <div bg=\"light\" expand=\"lg\" className=\"navbar\">\n        <div aria-controls=\"basic-navbar-nav\" />\n        <div id=\"basic-navbar-nav\">\n          <nav className=\"flex ml-12 my-6 mr-auto align-items-baseline\">\n            <NavLink to='/' className=\"hover:bg-purple-700 mr-4 px-4 py-2 rounded-md\">Home</NavLink>\n\n             {this.props.loggedIn && isStaff && (\n                 <>\n               <NavLink to='/events/admin/' className=\"hover:bg-purple-700 mr-4 px-4 py-2 rounded-md\">Admin Events</NavLink>\n               <NavLink to='/students' className=\"hover:bg-purple-700 mr-4 px-4 py-2 rounded-md\">Student List</NavLink>\n                 </>\n               )\n             }\n\n\n             {this.props.loggedIn && !isStaff && (\n               <>\n                 <NavLink to='/events/volunteer/' className=\"hover:bg-purple-700 mr-4 px-4 py-2 rounded-md\">Available Events</NavLink>\n                 <NavLink to='/events/my-events/' className=\"hover:bg-purple-700 mr-4 px-4 py-2 rounded-md\">My Events</NavLink>\n               </>\n               )\n             }\n\n             {\n               this.props.loggedIn\n               ?\n                 <>\n                   <NavLink to='/profile' className=\"hover:bg-purple-700 mr-4 px-4 py-2 rounded-md\">Profile</NavLink>\n                   <button className=\"btn\" onClick={() => this.props.handleLogout()}>Logout</button>\n                 </>\n\n               :\n                 <>\n                   <NavLink to='/login' className=\"hover:bg-purple-700 mr-4 px-4 py-2 rounded-md\">Login</NavLink>\n                   <NavLink to='/register' className=\"hover:bg-purple-700 mr-4 px-4 py-2 rounded-md\">Register</NavLink>\n                 </>\n             }\n           </nav>\n         </div>\n       </div>\n     )\n   }\n }\n\nexport default Navigation;\n","import { Component } from 'react';\n\nclass MainPage extends Component {\n\n  constructor(props) {\n    super(props);\n\n  }\n\n    render() {\n\n\n      return (\n\n          <ul>Welcome to the main page</ul>\n\n        )\n      }\n    }\n\n\nexport default MainPage;\n","import { Component } from 'react';\n\nclass Registration extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      phone: '',\n      password1: '',\n      password2: '',\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.handleRegistration(this.state)\n  }\n\n  render(){\n    return(\n      <div class=\"form-container\">\n        <form class=\"form-1\" onSubmit={this.handleSubmit}>\n          <input class=\"input-1\" type=\"text\"  name=\"username\" autoComplete=\"off\" required onChange={this.handleInput} value={this.state.username} align=\"center\" placeholder=\"Username\"/>\n          <input class=\"input-1\" type=\"email\" name=\"email\" align=\"center\" placeholder=\"e-mail\" onChange={this.handleInput} value={this.state.email} />\n          <input class=\"input-1\" type=\"password\" name=\"password1\" align=\"center\" autoComplete=\"off\" required onChange={this.handleInput} value={this.state.password1} placeholder=\"Password\"/>\n          <input class=\"input-1\" type=\"password\" name=\"password2\" align=\"center\" autoComplete=\"off\" required onChange={this.handleInput} value={this.state.password2} placeholder=\"Confirm Password\"/>\n          <button class=\"btn-submit\" align=\"center\" onClick={() => this.props.handleRegistration(this.state)}>Register</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Registration;\n","import { Component } from 'react';\n\nclass Login extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.handleLogin(this.state)\n  }\n\nrender(){\n  return(\n    <div class=\"form-container\">\n      <form class=\"form-1\" onSubmit={this.handleSubmit}>\n        <input class=\"input-1 \" type=\"text\"  name=\"username\" autoComplete=\"off\" required onChange={this.handleInput} value={this.state.username} align=\"center\" placeholder=\"Username\"/>\n        <input class=\"input-1 \" type=\"email\" name=\"email\" align=\"center\" placeholder=\"e-mail\" onChange={this.handleInput} value={this.state.email} />\n        <input class=\"input-1\" type=\"password\" name=\"password\" align=\"center\" autoComplete=\"off\" required onChange={this.handleInput} value={this.state.password1} placeholder=\"Password\"/>\n        <button class=\"btn-submit\" align=\"center\" onClick={() => this.props.handleLogin(this.state)}>Log in</button>\n      </form>\n    </div>\n  );\n  }\n}\n\nexport default Login;\n","import { Component } from 'react';\nimport Cookies from 'js-cookie';\n\n\nclass Profile extends Component{\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      display_name: '',\n      avatar: null,\n      preview: '',\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleImage = this.handleImage.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.editProfile = this.editProfile.bind(this);\n  }\n\n  componentDidMount(){\n    fetch('/api/v1/users/profiles/user/')\n    .then(response => {\n      if(!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => this.setState({ ...data  }))\n    .catch(error => {\n      console.error('There has been a problem with youor fetch operation:', error);\n    });\n  }\n\n\n  handleInput(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  handleImage(e) {\n    let file = e.target.files[0];\n      this.setState({\n       [e.target.name]: file,\n     });\n    let reader = new FileReader();\n    reader.onloadend = () => {\n      this.setState({\n        preview: reader.result,\n      });\n    }\n    reader.readAsDataURL(file);\n  }\n\n  async handleSubmit(e) {\n    e.preventDefault();\n    let formData= new FormData();\n    formData.append('avatar', this.state.avatar);\n    formData.append('display_name', this.state.display_name);\n    const options = {\n        method: 'POST',\n        headers: {\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: formData,\n      }\n      const response = await fetch('/api/v1/users/profiles/user/', options);\n      this.setState({ response })\n      // console.log(response);\n  }\n\n  editProfile(profile) {\n    const options ={\n      method: 'PATCH',\n      headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(profile)\n    }\n    fetch('/api/v1/users/profile/user/', options)\n      .then(response =>{\n        if(!response.ok) {\n          throw new Error('Error');\n        }\n        return response.json()\n      })\n  }\n\n  render(){\n  return (\n    <>\n\n        <form onSubmit={this.handleSubmit}>\n            <section className=\"profile\">\n              <input type='text' name=\"display_name\" value={this.state.display_name} onChange={this.handleInput} />\n              <input type=\"file\" name=\"avatar\" onChange={this.handleImage}/>\n              {this.state.avatar\n                ? <img src={this.state.preview || this.state.avatar} alt=\"\"/>\n                : null\n              }\n            </section>\n            <button type=\"submit\">Save Profile!</button>\n        </form>\n\n\n\n    </>\n  )}\n}\n\nexport default Profile;\n","import { Component } from 'react';\n\n\nclass AdminPageDetail extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isEditing: false,\n      grade: this.props.events?.grade,\n      date: this.props.events?.date,\n      // firstNmae: this.props.students?.firstName,\n      // lastName: this.props.students?.lastName\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.saveEvent = this.saveEvent.bind(this);\n\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  saveEvent() {\n    const event = this.props.event;\n    event.grade = this.state.grade;\n    event.date = this.state.date;\n    // event.volunteer = this.state.volunteer;\n    this.props.editEvent(event);\n    this.setState({ isEditing: false });\n  }\n\n  // <input type=\"text\" value={this.state.volunteer} onChange={this.handleInput} name=\"volunteer\"/>\n\n//   <label for=\"pet-select\">Choose a pet:</label>\n//\n// <select name=\"students\" id=\"student-select\">\n//     <option value=\"\">--Please choose a student--</option>\n//\n//     <option value={students.first_name} name=\"firstName\">First Name</option>\n//     <option value=\"students.firstName\">Last Name</option>\n//\n// </select>\n\n  render() {\n    const students = this.props.student;\n    const events = this.props.event;\n    return(\n      <li className=\"bg-purple-100 m-6 p-4 rounded\">\n        <div>\n            {\n            this.state.isEditing\n              ? (\n                  <>\n                    <input type=\"number\" min=\"1\" max=\"5\" name=\"grade\" value={this.state.grade} onChange={this.handleInput}/>\n                    <input type=\"datetime-local\" value={this.state.date} onChange={this.handleInput} name=\"date\"/>\n                  </>\n                )\n              : (\n                  <>\n                  <div className=\"flex items-center\" >\n                    <label className=\"text-gray-500 block text-sm mr-2\">Grade:</label>\n                    <h2 className=\"bg-white rounded-full py-2 px-4\">{events.grade}</h2>\n                    </div>\n                      <label className=\"text-gray-500 block text-sm\">Date:</label>\n                    <time>{events.date_of_event}</time>\n                      <label className=\"text-gray-500 block text-sm\">Volunteer:</label>\n                    <p>{events.volunteer}</p>\n                  </>\n                )\n            }\n            {\n            <button class=\"btn-edit bg-blue\" onClick={() => this.props.deleteEvent(events.id)}>delete</button>\n\n            }\n            {\n            this.state.isEditing\n              ? <button class=\"btn-editt bg-blue flex-col ml-2 mt-2\" type='button' onClick={this.saveEvent}>Save</button>\n              : <button class=\"btn-edit bg-blue flex-col ml-2 mt-2\" onClick={() => this.setState({isEditing: true})}>Edit</button>\n            }\n        </div>\n      </li>\n    )\n  }\n}\n\n\nexport default AdminPageDetail;\n","import { Component } from 'react';\nimport AdminPageDetail from './AdminPageDetail.js';\n\nimport Cookies from 'js-cookie';\n\n\nclass AdminPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      events: [],\n      students: [],\n      grade: null,\n      date: null\n    }\n    this.addEvent = this.addEvent.bind(this);\n    this.editEvent = this.editEvent.bind(this);\n    this.deleteEvent = this.deleteEvent.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.assignStudent = this.assignStudent.bind(this);\n    // this.getEvents = this.getEvents.bind(this);\n\n  }\n\n\n    // if the user is authenticated pull their events otherwise pull published events\n\n    componentDidMount(){\n      Promise.all([fetch('/api/v1/events/'), fetch('/api/v1/students/')])\n      .then(responses => {\n        return Promise.all(responses.map(function (response) {\n      \t\treturn response.json();\n      \t}));\n      })\n      .then(data => {\n        const [events, students] = data;\n        this.setState({events, students});\n      });\n    }\n\n\n\n    //\n    // getEvents(){\n    //   fetch('/api/v1/events/')\n    //   .then(response => {\n    //     if(!response.ok) {\n    //       throw new Error('Network response was not ok');\n    //     }\n    //     return response.json();\n    //   })\n    //   .then(data => this.setState({ events: data  }))\n    //   .catch(error => {\n    //     console.error('There has been a problem with youor fetch operation:', error);\n    //   });\n    // }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  addEvent(e) {\n    e.preventDefault();\n    const event = {\n      grade: this.state.grade,\n      date_of_event: this.state.date, //This is the key at the backend..\n      // volunteer: this.state.volunteer\n\n    };\n    console.log(event);\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(event),\n    }\n    fetch('/api/v1/events/', options)\n      .then(response => response.json())\n      .then(data => {\n        const events = [...this.state.events, data];\n        // events.push(data);\n        this.setState({events, grade: '', date: ''});\n      });\n  }\n\n    editEvent(event) {\n\n      const options = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(event),\n      }\n      fetch(`/api/v1/events/${event.id}/`, options)\n        .then(response => {\n          if(!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          const events = [...this.state.events];\n          console.log(events);\n          const index = events.findIndex(event => event.id === event.id);\n          events[index].grade = event.grade;\n          events[index].date = event.date;\n          this.setState({ events });\n          // this.getEvents();\n        });\n      }\n\n      deleteEvent(id) {\n        const options= {\n          method: 'DELETE',\n          headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n          },\n        }\n        fetch(`/api/v1/events/${id}/`, options)\n          .then(response => {\n            if (!response.ok) {\n              throw new Error('Network response was not ok');\n            }\n            const events = [...this.state.events];\n            const index = events.findIndex(event => events.id === id);\n            events.splice(index, 1);\n            this.setState({ events });\n          })\n          .catch((error) => {\n            console.error('Error:', error);\n          });\n        }\n\n      assignStudent(event, student) {\n\n        event.preventDefault();\n\n        const id = student.id;\n\n        const options = {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken'),\n          },\n          body: JSON.stringify(student),\n        }\n        fetch(`/api/v1/students/${id}/`, options)\n          .then(response => {\n            if(!response.ok) {\n              throw new Error('Network response was not ok');\n            }\n            const students = [...this.state.students];\n            console.log(students);\n            const index = students.findIndex(event => student.id === id);\n            student[index].event = null;\n            this.setState({ students });\n          });\n\n          }\n\n    render() {\n      const events = this.state.events.map(event => (\n        <AdminPageDetail key={event.id} event={event} deleteEvent={this.deleteEvent} editEvent={this.editEvent} />\n      ));\n\n      const students = this.state.students.map(student => (\n        <AdminPageDetail className=\"students\" key={student.id} assignStudent={this.assignStudent} student={student}/>\n\n      ));\n\n\n      return (\n        <>\n      \n          <section className=\"events-container flex\">\n                <ul>{events}</ul>\n\n\n                <section className=\"form-container sticky mt-12\" style={{top:10+\"VH\"}}>\n                    <form class=\"form-1\" onSubmit={this.addEvent}>\n                      <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label block\">Grade</label>\n                        <input type=\"number\" min=\"1\" max=\"5\" class=\"input-1\" id=\"exampleFormControlInput1\" autoComplete=\"off\" name=\"grade\" value={this.state.grade} onChange={this.handleInput} placeholder=\"Insert the grade\"/>\n                        </div>\n                      <div class=\"mb-3\">\n                        <label for=\"exampleFormControlTextarea1\" class=\"form-label block\">Event Date</label>\n                        <input type=\"datetime-local\"  class=\"input-1\" name=\"date\" id=\"datetime\" autoComplete=\"off\" id=\"exampleFormControlInput1\"  value={this.state.date_of_event} onChange={this.handleInput} rows=\"3\"/>\n                      </div>\n                  <button type=\"submit\" onClick={this.addevent} class=\"btn-submit bg-blue\">Submit</button>\n                </form>\n              </section>\n            </section>\n\n        </>\n        )\n      }\n\n    }\n\n    export default AdminPage;\n","import { Component } from 'react';\n\nimport Cookies from 'js-cookie';\n\n\nclass EventsList extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state={\n      events: [],\n      grade: null,\n      date: null\n      }\n    this.handleInput = this.handleInput.bind(this);\n    this.signUp = this.signUp.bind(this);\n    // this.submitEvent = this.submitEvent.bind(this);\n    }\n\n    componentDidMount(){\n      fetch('/api/v1/events/')\n      .then(response => {\n        if(!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => this.setState({ events: data  }))\n      .catch(error => {\n        console.error('There has been a problem with youor fetch operation:', error);\n      });\n    }\n\n      handleInput(event) {\n        this.setState({ [event.target.name]: event.target.value });\n      }\n\n    signUp(e, event) {\n      e.preventDefault();\n\n      const id = event.id;\n\n      const options = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(event),\n      }\n      fetch(`/api/v1/events/${id}/`, options)\n        .then(response => {\n          if(!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          const events = [...this.state.events];\n          // console.log(events);\n          const index = events.findIndex(event => event.id === id);\n          events[index].volunteer = false;\n          this.setState({ events });\n        });\n\n      }\n\n      render() {\n        const events = this.state.events.map((event, index)=> (\n          <div key = {index}>\n\n            <section >\n                <form onSubmit={(e) => this.signUp(e, event)} className=\"list\">\n                  <div class=\"mb-3\">\n                    <label for=\"exampleFormControlInput1\" class=\"form-label\">Grade</label>\n                    <p class=\"form-control\" id=\"exampleFormControlInput1\" name=\"grade\">{event.grade} </p>\n\n\n                    <label for=\"exampleFormControlTextarea1\" class=\"form-label\">Event Date</label>\n                    <time class=\"form-control\" id=\"exampleFormControlInput1\" rows=\"3\">{event.date_of_event}</time>\n\n                  <button id=\"signUp\" class=\"btn btn-primary offset\"type ='button' onClick={(e) => this.signUp(e, event)}>Sign Up</button>\n              </div>\n          </form>\n          </section>\n\n\n          </div>\n\n        ));\n\n      return (\n\n          <ul>{events}</ul>\n\n        )\n      }\n    }\n\n\nexport default EventsList;\n","import { Component } from 'react';\n\nimport Cookies from 'js-cookie';\n\n\nclass VolunteerPage extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state={\n      events: [],\n\n      }\n  this.cancelEvent = this.cancelEvent.bind(this);\n\n    }\n\n    componentDidMount(){\n      fetch('/api/v1/events/volunteer/')\n      .then(response => {\n        if(!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => this.setState({ events: data  }))\n      .catch(error => {\n        console.error('There has been a problem with youor fetch operation:', error);\n      });\n    }\n\n\n      handleInput(event) {\n        this.setState({ [event.target.name]: event.target.value });\n      }\n\n\n      cancelEvent(e, event) {\n          e.preventDefault();\n\n          const id = event.id;\n\n          const options = {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n              'X-CSRFToken': Cookies.get('csrftoken'),\n            },\n            body: JSON.stringify(event),\n          }\n          fetch(`/api/v1/events/volunteer/${id}/`, options)\n            .then(response => {\n              if(!response.ok) {\n                throw new Error('Network response was not ok');\n              }\n              const events = [...this.state.events];\n              // console.log(events);\n              const index = events.findIndex(event => event.id === id);\n              // events[index].volunteer = true;\n              this.setState({ events });\n            });\n\n          }\n        // const options= {\n        //   method: 'PUT',\n        //   headers: {\n        //   'Content-Type': 'application/json',\n        //   'X-CSRFToken': Cookies.get('csrftoken'),\n        //   },\n        // }\n        // fetch(`/api/v1/events/volunteer/${id}/`, options)\n        //   .then(response => {\n        //     if (!response.ok) {\n        //       throw new Error('Network response was not ok');\n        //     }\n        //     const events = [...this.state.events];\n        //\n        //     const index = events.findIndex(event => event.id === event.id);\n        //     events[index].volunteer = true;\n        //     this.setState({ events });\n        //   })\n        //   .catch((error) => {\n        //     console.error('Error:', error);\n        //   });\n        // }\n\n\n\n        // <Moment format=\"1976-04-19T12:59-0500\">{event.date}</Moment>\n    render() {\n      const events = this.state.events.map((event, index)=> (\n        <div key = {index}>\n            <h2>{event.grade}</h2>\n            <time>{event.date_of_event}</time>\n            <button onClick={(e) => this.cancelEvent(e,event)}>Cancel</button>\n\n\n        </div>\n\n      ));\n\n      return (\n\n          <ul>{events}</ul>\n\n        )\n      }\n    }\n\n\nexport default VolunteerPage;\n","import { Component } from 'react';\n\n\nclass StudentListDetail extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isEditing: false,\n      firstName: this.props.firstName,\n      lastName: this.props.lastName,\n      studentId: this.props.studentId,\n      primanryContact: this.props.primanryContact,\n      grade: this.props.grade,\n\n    }\n    this.handleInput = this.handleInput.bind(this);\n    this.saveStudent = this.saveStudent.bind(this);\n\n  }\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  saveStudent() {\n    const student = this.props.student;\n    student.first_name = this.state.firstName;\n    student.last_name = this.state.lastName;\n    student.student_id = this.state.studentId;\n    student.primary_contact = this.state.primaryContact;\n    student.grade = this.state.grade;\n\n    // event.volunteer = this.state.volunteer;\n    this.props.editStudent(student);\n    this.setState({ isEditing: false });\n  }\n\n  // <input type=\"text\" value={this.state.volunteer} onChange={this.handleInput} name=\"volunteer\"/>\n\n\n  render() {\n    const students = this.props.student;\n    return(\n      <li>\n        <div>\n            {\n            this.state.isEditing\n              ? (\n                  <>\n                    <input type=\"text\" name=\"firstName\" class=\"form-control\" autoComplete=\"off\" id=\"exampleFormControlInput1\"  value={this.state.first_name} onChange={this.handleInput} rows=\"3\"placeholder=\"Insert the student first name\"/>\n                    <input type=\"text\" name=\"lastName\" class=\"form-control\" autoComplete=\"off\" id=\"exampleFormControlInput1\"  value={this.state.last_name} onChange={this.handleInput} rows=\"3\"placeholder=\"Insert the student last name\"/>\n                    <input type=\"number\" class=\"form-control\" id=\"exampleFormControlInput1\" autoComplete=\"off\" name=\"studentId\" value={this.state.student_id} onChange={this.handleInput} placeholder=\"Insert the student ID\"/>\n                    <input type=\"text\" name=\"primaryContact\" class=\"form-control\" autoComplete=\"off\" id=\"exampleFormControlInput1\"  value={this.state.primary_contact} onChange={this.handleInput} rows=\"3\" placeholder=\"Insert the student primart contact\"/>\n                    <input type=\"number\" min=\"1\" max=\"5\" name=\"grade\" value={this.state.grade} onChange={this.handleInput} placeholder=\"Insert the student grade\"/>\n                  </>\n                )\n              : (\n                  <>\n\n                    <p>{students.first_name}</p>\n                    <p>{students.last_name}</p>\n                    <p>{students.student_id}</p>\n                    <p>{students.primary_contact}</p>\n                    <h2>{students.grade}</h2>\n                  </>\n                )\n            }\n            {\n            (\n            <>\n              <button onClick={() => this.props.deleteStudent(students.id)}>delete</button>\n              <button onClick={() => this.props.deactivateStudent(students.id)}> Deactivate </button>\n            </>\n            )\n            }\n            {\n            this.state.isEditing\n              ? <button type='button' onClick={this.saveStudent}>Save</button>\n              : <button onClick={() => this.setState({isEditing: true})}>Edit</button>\n            }\n        </div>\n      </li>\n    )\n  }\n}\n\n\nexport default StudentListDetail;\n","import { Component } from 'react';\nimport StudentListDetail from './StudentListDetail.js';\n\nimport Cookies from 'js-cookie';\n\n\nclass StudentList extends Component {\n  constructor(props) {\n    super(props);\n    this.state= {\n      students: [],\n      firstName: '',\n      lastName: '',\n      studentId: null,\n      primaryContact: '',\n      grade: null,\n    }\n    this.addStudent = this.addStudent.bind(this);\n    this.editStudent = this.editStudent.bind(this);\n    this.deleteStudent = this.deleteStudent.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n    this.deactivateStudent = this.deactivateStudent.bind(this);\n\n    // this.getEvents = this.getEvents.bind(this);\n\n  }\n\n\n    componentDidMount(){\n      fetch('/api/v1/students/')\n      .then(response => {\n        if(!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => this.setState({ students: data  }))\n      .catch(error => {\n        console.error('There has been a problem with youor fetch operation:', error);\n      });\n    }\n\n\n  handleInput(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  addStudent(e) {\n    e.preventDefault();\n    const student = {\n      first_name: this.state.firstName,\n      last_name: this.state.lastName, //This is the key at the backend..\n      student_id: this.state.studentId,\n      primary_contact: this.state.primaryContact,\n      grade: this.state.grade,\n\n    };\n    console.log(student);\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(student),\n    }\n    fetch('/api/v1/students/', options)\n      .then(response => response.json())\n      .then(data => {\n        const students = [...this.state.students, data];\n        // events.push(data);\n        this.setState({students, firstName: '', lastName: '', studentId: null, primaryContact: '', grade: ''});\n      });\n  }\n\n    editStudent(student) {\n\n      const options = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(student),\n      }\n      fetch(`/api/v1/students/${student.id}/`, options)\n        .then(response => {\n          if(!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          const students = [...this.state.students];\n          // console.log(students);\n          const index = students.findIndex(student => student.id === student.id);\n          students[index].firstName = student.firstName;\n          students[index].lastName = student.lastName;\n          students[index].studentID = student.studentID;\n          students[index].primaryContact = student.primaryContact;\n          students[index].grade = student.grade;\n\n          this.setState({ students });\n        });\n      }\n\n\n    deactivateStudent(student) {\n      const id = student.id;\n      const active = {\n        active: false,\n      }\n      const options = {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n        },\n        body: JSON.stringify(active),\n      }\n      fetch(`/api/v1/students/${id}/`, options)\n        .then(response => {\n          if(!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n\n        })\n\n        .then(data => {\n            const students = [...this.state.students];\n            // console.log(students);\n            const index = students.findIndex(student => student.id === id);\n            students[index].active = true;\n            this.setState({ students });\n            });\n      }\n\n\n      deleteStudent(id) {\n        const options= {\n          method: 'DELETE',\n          headers: {\n          'Content-Type': 'application/json',\n          'X-CSRFToken': Cookies.get('csrftoken'),\n          },\n        }\n        fetch(`/api/v1/students/${id}/`, options)\n          .then(response => {\n            if (!response.ok) {\n              throw new Error('Network response was not ok');\n            }\n            const students = [...this.state.students];\n            const index = students.findIndex(event => students.id === id);\n            students.splice(index, 1);\n            this.setState({ students });\n          })\n          .catch((error) => {\n            console.error('Error:', error);\n          });\n        }\n\n    render() {\n      const students = this.state.students.map(student => (\n        <StudentListDetail key={student.id} student={student} deactivateStudent={this.deactivateStudent} deleteStudent={this.deleteStudent} editStudent={this.editStudent} />\n      ));\n\n  //     const students = this.state.students.map(student => (\n  //       <div className=\"students\" key={student.id} student={student}>\n  //     <label for=\"student-select\" name=\"students\">Choose a student:</label>\n  //\n  //       <select name=\"student\" id=\"student-select\">\n  //     <option value=\"{this.state.student.first_name}\">--Please choose an option--</option>\n  //\n  // </select>\n  //\n  //       </div>\n  //     ));\n\n\n      return (\n        <>\n          <section className=\"events-container flex\">\n\n              <ul>{students}</ul>\n\n                <section className=\"form-container-2 sticky mt-12\" style={{top:10+\"VH\"}}>\n                    <form class=\"form-1\" onSubmit={this.addStudent}>\n                    <div class=\"mb-3\">\n                      <label for=\"exampleFormControlTextarea1\" class=\"form-label\">First Name</label>\n                      <input type=\"text\" name=\"firstName\" required class=\"form-control input-1\" autoComplete=\"off\" id=\"exampleFormControlInput1\"  value={this.state.first_name} onChange={this.handleInput} rows=\"3\"/>\n                    </div>\n\n                    <div class=\"mb-3\">\n                      <label for=\"exampleFormControlTextarea1\" class=\"form-label\">Last Name</label>\n                      <input type=\"text\" name=\"lastName\" required class=\"form-control input-1\" autoComplete=\"off\" id=\"exampleFormControlInput1\"  value={this.state.last_name} onChange={this.handleInput} rows=\"3\"/>\n                    </div>\n\n                    <div class=\"mb-3\">\n                      <label for=\"exampleFormControlInput1\" class=\"form-label\">Student ID</label>\n                      <input type=\"number\" class=\"form-control input-1\" required id=\"exampleFormControlInput1\" autoComplete=\"off\" name=\"studentId\" value={this.state.student_id} onChange={this.handleInput} placeholder=\"Insert the student ID\"/>\n                      </div>\n\n\n                    <div class=\"mb-3\">\n                      <label for=\"exampleFormControlTextarea1\" class=\"form-label \">Primary Contact</label>\n                      <input type=\"text\" name=\"primaryContact\" required class=\"form-control input-1\" autoComplete=\"off\" id=\"exampleFormControlInput1\"  value={this.state.primary_contact} onChange={this.handleInput} rows=\"3\"/>\n                    </div>\n\n\n                      <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Grade</label>\n                        <input type=\"number\" min=\"1\" max=\"5\" required class=\"form-control input-1\" id=\"exampleFormControlInput1\" autoComplete=\"off\" name=\"grade\" value={this.state.grade} onChange={this.handleInput} placeholder=\"Insert the grade\"/>\n                        </div>\n\n                  <button type=\"submit\" onClick={this.addStudent} class=\"btn-submit bg-blue\"  >Submit</button>\n                </form>\n              </section>\n          </section>\n\n        </>\n        )\n      }\n\n    }\n\n    export default StudentList;\n","import React, { Component, Fragment } from 'react';\n\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nimport Navbar from './components/Navbar.js';\nimport MainPage from './components/MainPage.js';\nimport Registration from './components/Registration.js';\nimport Login from './components/Login.js';\nimport Profile from './components/Profile.js';\nimport AdminPage from './components/AdminPage.js';\nimport EventsList from './components/EventsList.js';\nimport VolunteerPage from './components/VolunteerPage.js';\nimport StudentList from './components/StudentList.js';\n\n\nimport \"./index.css\";\nimport './App.css';\n\nclass App extends Component{\n  constructor(props) {\n    super(props);\n    this.state={\n      loggedIn: !!Cookies.get('Authorization') ? true : false,\n      isStaff: !!JSON.parse(localStorage.getItem('user'))?.is_staff,\n\n    }\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleRegistration = this.handleRegistration.bind(this);\n    // this.handleSelection = this.handleSelection.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n\n  }\n\n\n  async handleLogin(user) {\n    // alert('Hey, Sayeda!');\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n    };\n    const handleError = (error) => console.warn(error);\n    const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\n    if(response.ok) {\n      const data = await response.json().catch(handleError);\n      // console.log(data);\n      Cookies.set('Authorization', `Token ${data.key}`);\n      // this.props.history.push('/events/')\n      localStorage.setItem('user', JSON.stringify(data.user));\n\n\n      this.setState({isStaff: data.user.is_staff, loggedIn: true});\n\n      if(data.user.is_staff) {\n        this.props.history.push('/events/admin/');\n      } else {\n        this.props.history.push('/events/volunteer/');\n      }\n    }\n  }\n\n  async handleRegistration(user) {\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken'),\n      },\n      body: JSON.stringify(user),\n      };\n    const handleError = (error) => console.warn(error);\n    const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n    if (response.ok) {\n      const data = await response.json().catch(handleError);\n\n      Cookies.set('Authorization', `Token ${data.key}`);\n      localStorage.setItem('user', JSON.stringify(data.user));\n\n      this.setState({loggedIn: true});\n      this.props.history.push('/events/volunteer/');\n    }\n  }\n\n  async handleLogout(user){\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n  };\n    const handleError = (err) => console.warn(err);\n    const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n\n    if(response.ok) {\n      Cookies.remove('Authorization');\n      this.props.history.push('/');\n      this.setState({loggedIn: false});\n      localStorage.removeItem('user');\n    }\n  }\n\n\n\n// <Switch>\n//     <Route\n//       path='/login'\n//       render={(props) => (\n//         <Login {...props} handleLogin={this.handleLogin} isAuthed={true} />\n//       )}\n//     />\n//     <Route\n//       path='/register'\n//       render={(props) => (\n//         <Registration {...props} handleRegistration={this.handleRegistration} />\n//       )}\n//     />\n\n  render() {\n\n  return(\n    <>\n    <main className=\"max-w-screen-lg m-auto  \">\n      <Navbar loggedIn={this.state.loggedIn} handleLogout={this.handleLogout} isStaff={this.state.isStaff} />\n\n      <Switch>\n          <Route\n            path='/login'\n            render={(props) => (\n              <Login {...props} handleLogin={this.handleLogin} isAuthed={true} />\n\n            )}\n          />\n          <Route\n            path='/register'\n            render={(props) => (\n              <Registration {...props} handleRegistration={this.handleRegistration} />\n            )}\n          />\n\n          <Route\n            path='/events/volunteer/'\n            render={(props) => (\n              <EventsList {...props} />\n            )}\n          />\n\n          <Route\n            path='/events/admin/'\n            render={(props) => (\n              <AdminPage {...props} isAuthed={true} />\n            )}\n          />\n\n          <Route\n            path='/events/my-events/'\n            render={(props) => (\n              <VolunteerPage {...props} isAuthed={true} />\n            )}\n          />\n\n          <Route\n            path='/profile'\n            render={(props) => (\n              <Profile {...props} isAuthed={true} />\n\n            )}\n          />\n\n          <Route\n            path='/students'\n            render={(props) => (\n              <StudentList {...props} isAuthed={true} />\n\n            )}\n          />\n\n\n\n\n        <Route exact path=\"/\">\n           <MainPage />\n        </Route>\n\n      </Switch>\n  </main>\n    </>\n\n  );\n}\n\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}